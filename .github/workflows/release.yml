on:
  push:
    branches:
      - main
      - release

jobs:
  release:
    name: Release - ${{ matrix.platform.os-name }}
    strategy:
      matrix:
        platform:
          - os-name: Windows-x86_64
            runs-on: ubuntu-latest
            target: x86_64-pc-windows-gnu

          - os-name: Linux-x86_64
            runs-on: ubuntu-latest
            target: x86_64-unknown-linux-musl

          - os-name: Linux-aarch64
            runs-on: ubuntu-latest
            target: aarch64-unknown-linux-musl

          - os-name: macOS-x86_64
            runs-on: macos-latest
            target: x86_64-apple-darwin

          - os-name: macOS-aarch64
            runs-on: macos-latest
            target: aarch64-apple-darwin

    runs-on: ${{ matrix.platform.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      - name: Install dependencies for Windows target
        if: matrix.platform.target == 'x86_64-pc-windows-gnu'
        run: |
            sudo apt-get update
            sudo apt-get install -y mingw-w64

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --target ${{ matrix.platform.target }}

      - name: Show Rust build output files
        run: |
          echo "Release binaries:"
          ls -lh target/*/release/

      - name: Compress binary
        run: |
            BIN_NAME="admissibility-rust"
            mkdir -p dist
            if [[ "${{ matrix.platform.target }}" == *"windows"* ]]; then
              EXT=".exe"
              zip -j dist/${BIN_NAME}-${{ matrix.platform.os-name }}.zip target/${{ matrix.platform.target }}/release/${BIN_NAME}$EXT
            else
              tar -czvf dist/${BIN_NAME}-${{ matrix.platform.os-name }}.tar.gz -C target/${{ matrix.platform.target }}/release ${BIN_NAME}
            fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
            name: binary-${{ matrix.platform.os-name }}
            path: dist/*